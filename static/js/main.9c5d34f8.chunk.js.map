{"version":3,"sources":["api/api.js","contexts/favoriteContext.js","components/NavBar/NavBar.js","components/Pokemons/Pagination.js","components/Pokemons/PokemonCard.js","components/Pokemons/Pokedex.js","components/Footer/Footer.js","components/NavBar/FavoritesPokemons.js","App.js","index.js"],"names":["searchPokemon","pokemon","a","url","fetch","response","json","data","getPokemon","limit","offset","getPokemonData","FavoriteContext","React","createContext","favoritePokemons","updateFavoritePokemons","id","FavoriteProvider","Provider","NavBar","onSearch","history","useHistory","useContext","useState","search","setSearch","handlePokemon","e","searchLowerCase","toLocaleLowerCase","className","onClick","push","src","alt","type","placeholder","onChange","target","value","length","autoComplete","icon","faSearch","faHeart","Pagination","props","onLeftClick","onRightClick","page","totalPages","faArrowLeft","faArrowRight","PokemonCard","heart","includes","colors","grass","fire","water","electric","ice","poison","ground","rock","bug","dragon","normal","flying","fighting","psychic","ghost","dark","steel","fairy","getColorByType","to","sprites","other","dream_world","front_default","name","types","map","index","style","display","backgroundColor","borderRadius","marginBottom","fontSize","fontWeight","width","letterSpacing","wordSpacing","textTransform","justifyContent","preventDefault","Pokedex","pokemons","setPage","total","loading","nextPage","Math","max","min","Footer","href","class","FavoritesPokemons","favorites","console","log","favorite","localStoraceKey","App","setTotal","setLoading","SetFavorites","notFound","setNotFound","setPokemons","fetchPokemon","promises","results","Promise","all","result","ceil","count","alert","useEffect","JSON","parse","window","localStorage","getItem","loadFavoritePokemons","pokemonName","updated","isFavorite","indexOf","splice","setItem","stringify","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c5d34f8.chunk.js","sourcesContent":["export const searchPokemon = async (pokemon) =>{\r\n    try{\r\n        let url =`https://pokeapi.co/api/v2/pokemon/${pokemon}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        return data;\r\n    } catch(err) {\r\n\r\n    }\r\n}\r\n\r\nexport const getPokemon = async (limit=21, offset=0) =>{\r\n    try{\r\n        let url =`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        return data;\r\n    } catch(err) {\r\n\r\n    }\r\n}\r\n\r\nexport const getPokemonData = async (url) => {\r\n    try{\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        return data;\r\n    } catch {\r\n\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst FavoriteContext = React.createContext({\r\n    favoritePokemons: [],\r\n    updateFavoritePokemons: (id) => null\r\n});\r\n\r\nexport const FavoriteProvider = FavoriteContext.Provider;\r\n\r\nexport default FavoriteContext;\r\n","import React, { useContext, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport './NavBar.css';\r\nimport FavoriteContext from '../../contexts/favoriteContext';\r\n\r\n\r\nexport const NavBar = ({onSearch}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { favoritePokemons } = useContext(FavoriteContext);\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        setSearch(e.target.value);\r\n        if (e.target.value.length === 0) {\r\n        onSearch(null);\r\n    }\r\n    };\r\n\r\n    const handlePokemon = async(e) => {\r\n        const searchLowerCase =search.toLocaleLowerCase();\r\n        onSearch(searchLowerCase);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <div/>\r\n            <div className=\"navBar-wrap-logo\">\r\n                <img\r\n                onClick={() => history.push(\"/\")}\r\n                src=\"https://datadex.talzz.com/_images/graphics/logo.png\" alt=\"logo\" className=\"navBar-img\" />\r\n            </div>\r\n            <div className=\"navBar-wrap-input\">\r\n            <input\r\n            className=\"navBar-input\"\r\n            type=\"text\"\r\n            placeholder=\"Find your pokemon...\"\r\n            onChange={ onChange }\r\n            autoComplete=\"off\"\r\n            />\r\n            <button className=\"navBar-btn-search\"\r\n            onClick={ handlePokemon }\r\n            ><FontAwesomeIcon icon={ faSearch } /></button>\r\n            </div>\r\n            <div className=\"navBar-icon\" >\r\n            <FontAwesomeIcon\r\n            onClick={() => history.push(\"/favoritespks\")}\r\n            className=\"navBar-icon-heart\" icon={ faHeart } />{favoritePokemons.length}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Pagination.css';\r\n\r\nexport const Pagination = (props) => {\r\n\r\n    const { onLeftClick, onRightClick, page,  totalPages } = props;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button onClick={ onLeftClick }>\r\n            <FontAwesomeIcon icon={ faArrowLeft } />\r\n            </button>\r\n            <div> {page} de {totalPages} </div>\r\n            <button onClick={ onRightClick } >\r\n            <FontAwesomeIcon icon={ faArrowRight } />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport './PokemonCard.css';\r\nimport FavoriteContext from '../../contexts/favoriteContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const PokemonCard = (props) => {\r\n\r\n    const { pokemon } = props;\r\n    // console.log(pokemon)\r\n\r\n    const { favoritePokemons, updateFavoritePokemons } = useContext(FavoriteContext);\r\n\r\n    const redHeart = \"❤️\";\r\n    const blackHeart = \"🖤\";\r\n\r\n    const heart = favoritePokemons.includes(pokemon) ? redHeart : blackHeart;\r\n\r\n    const clickHeart = (e) =>{\r\n        e.preventDefault();\r\n        updateFavoritePokemons(pokemon);\r\n    }\r\n    const colors = {\r\n        grass: '#63BB5B',\r\n        fire: '#FF9C54',\r\n        water: '#4E90D5',\r\n        electric: '#F3D23B',\r\n        ice: '#74CEC0',\r\n        poison: '#AB6AC8',\r\n        ground: '#D97746',\r\n        rock: '#C7B78B',\r\n        bug: '#90C12C',\r\n        dragon: '#0A6DC4',\r\n        normal: '#a4acaf',\r\n        flying: '#8FA8DD',\r\n        fighting: '#D80A49',\r\n        psychic: '#F97176',\r\n        ghost: '#5269AC',\r\n        dark: '#5A5366',\r\n        steel: '#5A8EA1',\r\n        fairy: '#EC8FE6',\r\n    };\r\n\r\n    const getColorByType= (type) => colors[type];\r\n\r\n    return (\r\n    <Link to={`/PokemonCardDetail/${pokemon.id}`} >\r\n        <div className=\"pokemonCard\" >\r\n\r\n            <div className=\"pokemonCard-img\">\r\n                <img src={ pokemon.sprites.other.dream_world.front_default } alt={pokemon.name} />\r\n            </div>\r\n            <div className=\"pokemonCard-content\">\r\n                <div className=\"pokemonCard-text-1\">\r\n                    <div>N.°{pokemon.id}</div>\r\n                    <h3>{pokemon.name}</h3>\r\n                </div>\r\n                <div className=\"pokemonCard-text-2\">\r\n                    <div className=\"pokemonCard-type\">\r\n                        {\r\n                            pokemon.types.map((type, index)=>{\r\n                            return<div key={index}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                backgroundColor: `${getColorByType(type.type.name)}`,\r\n                                borderRadius: \"25px\",\r\n                                marginBottom: \"5px\",\r\n                                fontSize: \"22px\",\r\n                                fontWeight: \"400\",\r\n                                width: \"130px\",\r\n                                letterSpacing: \"1.4px\",wordSpacing: \"1px\",textTransform: \"capitalize\",\r\n                                justifyContent:\"center\",\r\n                                }} >{type.type.name}</div>;\r\n                            }\r\n                        )}\r\n                    </div>\r\n                    <div className=\"pokemonCard-icon\"\r\n                    onClick={ clickHeart }\r\n                    >\r\n                    {heart}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Link>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Pagination } from './Pagination';\r\n\r\nimport './Pokedex.css';\r\nimport { PokemonCard } from './PokemonCard';\r\n\r\nexport const Pokedex = (props) => {\r\n\r\n    const { pokemons, page, setPage, total,loading } = props;\r\n\r\n    const lastPage = ( ) => {\r\n        const nextPage = Math.max(page - 1, 0);\r\n        setPage(nextPage);\r\n    }\r\n\r\n    const nextPage = ( ) => {\r\n        const nextPage = Math.min(page + 1, total);\r\n        setPage(nextPage);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pokedex\">\r\n            <div className=\"pokedex-header\">\r\n                <h1>Pokedex</h1>\r\n                <Pagination\r\n                page={page + 1 }\r\n                totalPages={ total }\r\n                onLeftClick={ lastPage }\r\n                onRightClick={ nextPage }\r\n                />\r\n            </div>\r\n            { loading //colocando el loading aqui se ahce mas rapida la caga\r\n                ?(<div>Loading Pokemons...</div>)\r\n                :(\r\n                <div className=\"pokedex-grid\">\r\n                    {pokemons.map((pokemon, index) => {\r\n                        return(\r\n                            <PokemonCard pokemon={pokemon} key={index} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nexport const Footer = () => {\r\n\r\n    return (\r\n        <nav className=\"footer\">\r\n            <div/>\r\n            <div className=\"footer-wrap-logo\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1280px-International_Pok%C3%A9mon_logo.svg.png\" alt=\"logo\" className=\"footer-img\" />\r\n            </div>\r\n            <div className=\"footer-wrap-content\">\r\n            <h2>Danfelogar frontend developer, made with love © 2021</h2>\r\n            </div>\r\n            <div className=\"footer-social-networks\">\r\n            <a href=\"https://www.instagram.com/danfelo18/\"\r\n            ><i className=\"fab fa-instagram\"></i></a>\r\n            <a href=\"https://www.facebook.com/daniel.pologarcia/\"><i class=\"fab fa-facebook-f\"></i></a>\r\n            <a href=\"https://www.linkedin.com/in/daniel-felipe-polo-garcia-9a985b210/\"\r\n            ><i className=\"fab fa-linkedin-in\"></i></a>\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n}","import React from 'react';\r\nimport { PokemonCard } from '../Pokemons/PokemonCard';\r\n\r\nimport './FavoritesPokemons.css';\r\n\r\nexport const FavoritesPokemons = ({ favorites }) => {\r\n    console.log(favorites);\r\n\r\n    return (\r\n        <div className=\"favorites\">\r\n            <div className=\"favorites-grid\">\r\n                {\r\n                    favorites.map((favorite,index) => {\r\n                        return(\r\n                            <PokemonCard pokemon={favorite} key={index} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport './App.css';\nimport { getPokemon, getPokemonData, searchPokemon } from './api/api';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { Pokedex } from './components/Pokemons/Pokedex';\nimport { FavoriteProvider } from './contexts/favoriteContext';\nimport { Footer } from './components/Footer/Footer';\nimport { FavoritesPokemons } from './components/NavBar/FavoritesPokemons';\n\nconst localStoraceKey = \"favorite_pokemon\"\n\nfunction App() {\n\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [favorites, SetFavorites] = useState([]);\n  const [notFound, setNotFound] = useState(false);\n  const [pokemons, setPokemons] = useState([]);\n  //esta funcion de abajo es la mas poderosa y por ende la esencia de este codigo por lo desconocida que era para  mi\n  const fetchPokemon = async () =>{\n    try {\n      setLoading(true);//porque la carga de la pag demora por lo que es necesario decirle  al usuario que espere  para ejecutar su peticion que para este caso es pasar pag\n      const data = await getPokemon(21, 21 * page);\n      const promises=data.results.map( async(pokemon) =>{\n        return await getPokemonData(pokemon.url);//esto esta creando 10 promesas diferentes para cada poquemon es decir esta \"desestructurando\" la info del url de la data primaria\n      });\n      const result = await Promise.all(promises);//me ayuda a acceder al url que es donde esta almacenado la informacion detallada de un pokemon dentro de mi data\n      // pd:oye no quiero que sigas corriendo mas codigo hasta que (promice.all) termine de devolverme todo lo que necesito\n      setPokemons(result);\n      setLoading(false);\n      setTotal(Math.ceil(data.count / 21));\n      setNotFound(false);\n    } catch(err){\n      alert(err);\n    }\n  }\n\n  const  loadFavoritePokemons = () => {\n    const pokemons = JSON.parse(window.localStorage.getItem(localStoraceKey)) || [];\n    SetFavorites(pokemons);\n  }\n\n  useEffect(() => {\n    loadFavoritePokemons();\n  }, [])\n\n  useEffect(() => {\n    fetchPokemon();\n  }, [page])\n\n  const updateFavoritePokemons = (props) =>{\n    const updated = [...favorites];\n    const isFavorite = favorites.indexOf(props);\n    if(isFavorite >= 0){\n      updated.splice(isFavorite,1);\n    } else {\n      updated.push(props);\n    }\n    SetFavorites(updated);\n    window.localStorage.setItem(localStoraceKey,\n      JSON.stringify(updated));//para guardar en el store todos mis corazoncitos\n      console.log(favorites);\n  };\n\n  const onSearch= async(pokemonName) => {\n    if(!pokemonName) {\n      return fetchPokemon();\n    }\n    setLoading(true);\n    setNotFound(false);\n    const result = await searchPokemon(pokemonName);\n\n    if(!result ) {\n      setNotFound(true);\n      setLoading(false);\n      return\n    }else{\n      setPokemons([result]);\n      setPage(0);//para vitar que en la busqueda si es exitosa se  muestre la paginacion de toda la pokedes\n      setTotal(1);//el mismo comentario que el de arriba\n    }\n    setLoading(false);\n  }\n\n  // console.log(pokemons)\n\n  return (\n    <FavoriteProvider value={{\n      favoritePokemons: favorites,\n      updateFavoritePokemons: updateFavoritePokemons\n    }} >\n      <div>\n      <Router>\n        <NavBar onSearch={ onSearch } />\n        <Switch>\n          <Route exact path=\"/\">\n          {\n            notFound\n            ?(<div className=\"notFound\" >The searched pokemon was not found 😔</div>)\n            :(\n              <div className=\"App\">\n              <Pokedex pokemons={ pokemons } page={ page } setPage={ setPage } total={ total } loading={ loading } />\n              </div>\n            )\n          }\n          </Route>\n          <Route exact path=\"/favoritespks\">\n            <FavoritesPokemons favorites={ favorites }  />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n      </div>\n    </FavoriteProvider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}